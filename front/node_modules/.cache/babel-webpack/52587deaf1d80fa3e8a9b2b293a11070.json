{"ast":null,"code":"import _asyncToGenerator from \"/home/carlos/ACC/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Validators } from '@angular/forms';\nimport * as AWS from 'aws-sdk';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\n\nfunction ArchivoComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Por favor ingrese un correo valido \");\n    i0.ɵɵelementEnd();\n  }\n} //import * as uuid from 'uuid';\n\n\nexport class ArchivoComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.isCsv = '(.)*[.]+[cC]+[sS]+[vV]';\n    this.processFileForm = this.fb.group({});\n    this.AWSID_ = 'AKIAQMM5EU3QUWPLMGT2';\n    this.AWSSECRET_ = 'nzwz1cgIjw4eAMD2X4MTw4kxp/4qzs7VJLTJQc5B';\n    this.BUCKET_ = 'acc-pt';\n    this.FILE_ = 'C:\\\\fakepath\\\\pruebaTecnica.csv';\n    this.NAME_FILE = 'pruebaTecnica.csv';\n    this.RUTAOUT_ = 'archivosIN/';\n  }\n\n  upload() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      //const fileContent = fs.readFileSync(FILE_);\n      const s3 = new AWS.S3({\n        apiVersion: '2006-03-01',\n        accessKeyId: _this.AWSID_,\n        secretAccessKey: _this.AWSSECRET_\n      });\n      let params = {\n        Bucket: _this.BUCKET_,\n        Key: _this.RUTAOUT_ + _this.NAME_FILE,\n        ACL: 'public-read',\n        ContentType: 'text/csv',\n        Body: 'funciono'\n      };\n      let etag = yield s3.upload(params);\n      return etag;\n    })();\n  }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  onSave() {\n    console.log('entro');\n\n    if (this.processFileForm.valid) {\n      console.log(this.processFileForm.value);\n      console.log(this.upload());\n    } else {\n      console.log('formulario no valido');\n    }\n  }\n\n  isValidFiel(field) {\n    const validateField = this.processFileForm.get(field);\n    return !(validateField === null || validateField === void 0 ? void 0 : validateField.valid) && (validateField === null || validateField === void 0 ? void 0 : validateField.touched) ? 'is-invalid' : (validateField === null || validateField === void 0 ? void 0 : validateField.touched) ? 'is-valid' : '';\n  }\n\n  initForm() {\n    this.processFileForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      //archivo:['',[Validators.required]]\n      archivo: ['', [Validators.required, Validators.pattern(this.isCsv)]]\n    });\n  }\n\n}\n\nArchivoComponent.ɵfac = function ArchivoComponent_Factory(t) {\n  return new (t || ArchivoComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n\nArchivoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ArchivoComponent,\n  selectors: [[\"app-archivo\"]],\n  decls: 14,\n  vars: 6,\n  consts: [[\"novalidate\", \"\", 1, \"mt-3\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"type\", \"file\", \"placeholder\", \"archivo\", \"formControlName\", \"archivo\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"form-control\", \"btn\", \"btn-block\", \"btn-primary\"]],\n  template: function ArchivoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ArchivoComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSave();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"label\");\n      i0.ɵɵtext(3, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementStart(5, \"div\", 3);\n      i0.ɵɵtemplate(6, ArchivoComponent_span_6_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 1);\n      i0.ɵɵelementStart(8, \"label\");\n      i0.ɵɵtext(9, \"Archivo a procesar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"p\");\n      i0.ɵɵelementStart(12, \"button\", 6);\n      i0.ɵɵtext(13, \"Procesar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      let tmp_2_0;\n      i0.ɵɵproperty(\"formGroup\", ctx.processFileForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassMap(ctx.isValidFiel(\"email\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.processFileForm.get(\"email\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵclassMap(ctx.isValidFiel(\"archivo\"));\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i2.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcmNoaXZvLmNvbXBvbmVudC5zY3NzIn0= */\"]\n});","map":{"version":3,"sources":["/home/carlos/ACC/front/src/app/pages/archivo/archivo.component.ts","/home/carlos/ACC/front/src/app/pages/archivo/archivo.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport * as AWS from 'aws-sdk';\n//import * as uuid from 'uuid';\n\n@Component({\n  selector: 'app-archivo',\n  templateUrl: './archivo.component.html',\n  styleUrls: ['./archivo.component.scss']\n})\nexport class ArchivoComponent implements OnInit {\n\n  private isCsv='(.)*[.]+[cC]+[sS]+[vV]';\n\n  processFileForm: FormGroup=this.fb.group({ });\n  \n\n  private AWSID_='AKIAQMM5EU3QUWPLMGT2';\n  private AWSSECRET_='nzwz1cgIjw4eAMD2X4MTw4kxp/4qzs7VJLTJQc5B';\n  private BUCKET_='acc-pt';\n  private FILE_='C:\\\\fakepath\\\\pruebaTecnica.csv';\n  private NAME_FILE='pruebaTecnica.csv';\n  private RUTAOUT_='archivosIN/';\n\n\n  constructor(private fb:FormBuilder) { }\n\n  async upload(){\n    //const fileContent = fs.readFileSync(FILE_);\n    const s3 = new AWS.S3({\n    apiVersion: '2006-03-01',\n    accessKeyId: this.AWSID_,\n    secretAccessKey: this.AWSSECRET_\n    });\n    let params = {\n    Bucket: this.BUCKET_,\n    Key: this.RUTAOUT_ + this.NAME_FILE,\n    ACL: 'public-read',\n    ContentType: 'text/csv',\n    Body: 'funciono'\n    };\n    let etag = await s3.upload(params);\n    return etag;\n  };\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n \n\n  onSave():void{\n    console.log('entro')\n    if(this.processFileForm.valid){\n      console.log(this.processFileForm.value);\n      console.log(this.upload());\n\n    }else{\n      console.log('formulario no valido')\n    }\n  }\n\n  isValidFiel(field:string):string{\n    const validateField=this.processFileForm.get(field);\n    return (!validateField?.valid && validateField?.touched) \n    ? 'is-invalid' : validateField?.touched ? 'is-valid':'';\n  }\n\n  private initForm():void{\n    this.processFileForm=this.fb.group({\n      email:['',[Validators.required,Validators.email]],\n      //archivo:['',[Validators.required]]\n      archivo:['',[Validators.required,Validators.pattern(this.isCsv)]]\n    })\n  }\n\n}\n","<form novalidate class=\"mt-3\" (ngSubmit)=\"onSave()\" [formGroup]=\"processFileForm\">  \n    \n    <div class=\"form-group\" >\n        <label>Email</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"email\" formControlName=\"email\" [class]=\"isValidFiel('email')\">\n        <div class=\"invalid-feedback\">\n            \n            <span *ngIf=\"processFileForm.get('email')?.errors?.email\">\n                Por favor ingrese un correo valido\n            </span>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label>Archivo a procesar</label>\n        <input type=\"file\" placeholder=\"archivo\" class=\"form-control\" formControlName=\"archivo\" [class]=\"isValidFiel('archivo')\">\n    </div>\n\n    <p></p>\n\n    \n        <button type=\"submit\" class=\"form-control btn btn-block btn-primary\">Procesar</button>\n    \n\n\n\n</form>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}